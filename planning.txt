1. check order of input args, save output file names to variables.
2. add open of output files to open files method.
V 3. create struct for unit (operation+index, Fk, Fj, Qj, Qk...)
4. malloc of 6 "main" pointer in unit_types struct
5. mallocs to pointers for all of the units according to count from config
V 6. change cmds name to ints and the array name to mem
V 7. change inst struct to include also the properties for trace file: unit_name, unit_pointer, cycle_issued, cycle_read_operands, cycle_execute_end, cycle_write_result. 
8. create regs array that contains reg struct:
	reg_value (single precision)
	reg_status (pointer to relevant unit)
9. create methods that convert float to SP and SP to float
10. regs init - F0=0, F1=1.0, etc
11. create instructions queue of 16 asm_cmd_t
12. support queue functionalities (is full, enqueue, dequeue, top)
13. fetch - check if queue is full. if full- does nothing, if not - enqueue.
14. issue - checks queue's top: 
	* checks the status of the dst reg, if it's busy does nothing
	* checks that there is a relevant non-busy unit, if there isn't does nothing
	* if two checks are ok, dequeue the instruction from the queue and assign a unit to it (with relevant bookkeeping)
15. read operands - checks if Rj, Rk are Yes. If not - wait. If both 	Yes, changes them to No.
16. implement operation methods (add, sub, etc)  	
17. execution - count down (make sure we notice that the last cycle of read operation is the first cycle of execution). when 0 - executes the relevant operation.
18. write result - checks if Rj, Rk are No for all units that are waiting to the reg we are going to write. If not - wait. 
	If ok - updates the register value and add relevant bookkeeping.
19. create method that checks conditions for write and write / write and 	read form the same address in memory, used in LD and ST executions. 
	We be called in wrote result step.
	TODO - think about an implementation for that.
20. add a method for writing memout file - dump the mem array after execution.
21. add a method for writing regout file - dump the float values of regs array after execution.
22. add a method for writing traceinst file - dump the inst values after execution.
23. understand if we need to trace unit after running the step or before (in execute all).
24. think if we want to implement trimming the output mem file if only include zeros from a certain point onward. maybe save a counter of max relevant mem address and export only until this counter.

100. free all mallocs
101. close files
102. add documentation file
103. write three memin + cfg files for tests.
document the check programs in doc file
104. organize submission